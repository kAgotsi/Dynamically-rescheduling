/* 
 * $Id$
 * This file is a part of the Arakhne Foundation Classes, http://www.arakhne.org/afc
 * 
 * Copyright (c) 2000-2012 Stephane GALLAND.
 * Copyright (c) 2005-10, Multiagent Team, Laboratoire Systemes et Transports,
 * Universite de Technologie de Belfort-Montbeliard.
 * Copyright (c) 2013-2019 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.arakhne.afc.simulation.framework.framework1d.agents

import io.sarl.core.Initialize
import java.util.UUID
import org.arakhne.afc.simulation.framework.base.agents.AbstractSimulatedAgent
import org.arakhne.afc.simulation.framework.framework1d.skills.StandardRoadEnvironment

/**
 * The abstract implementation for simulated agents into 1D or 1.5D environments.
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
agent AbstractSimulatedAgent1d extends AbstractSimulatedAgent {

	override overridableInitializationStage(it : Initialize) : void {
		super.overridableInitializationStage(it)
		var physicSkill = new StandardRoadEnvironment(
			it.parameters.get(0) as UUID, it.parameters.get(1) as UUID)
		setSkill(physicSkill)
	}

}

