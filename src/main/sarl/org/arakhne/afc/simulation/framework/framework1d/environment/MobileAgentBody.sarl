/* 
 * $Id$
 * This file is a part of the Arakhne Foundation Classes, http://www.arakhne.org/afc
 * 
 * Copyright (c) 2000-2012 Stephane GALLAND.
 * Copyright (c) 2005-10, Multiagent Team, Laboratoire Systemes et Transports,
 * Universite de Technologie de Belfort-Montbeliard.
 * Copyright (c) 2013-2019 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.arakhne.afc.simulation.framework.framework1d.environment

import java.util.List
import org.arakhne.afc.gis.road.primitive.RoadSegmentContainer
import org.arakhne.afc.simulation.framework.base.environment.AgentBody
import org.arakhne.afc.simulation.framework.base.events.Influence
import org.arakhne.afc.simulation.framework.framework1d.preferences.PreferenceManager1d

/**
 * Mobile body for agents.
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
class MobileAgentBody extends MobileRoadObject implements AgentBody {

	var forwardPerceptionDistance = Double::NEGATIVE_INFINITY

	var roads : RoadSegmentContainer

	var objects : List<CullingResult1d<RoadObject>>

	var influence : Influence
	
	def setForwardPerceptionDistance(d : double) {
		this.forwardPerceptionDistance = d
	}

	
	def getForwardPerceptionDistance : double {
		if (this.forwardPerceptionDistance < 0.0) {
			this.forwardPerceptionDistance = PreferenceManager1d::singleton.agentPerceptionDistance
		}
		return this.forwardPerceptionDistance
	}

	def getPerceivedRoads : RoadSegmentContainer {
		this.roads
	}

	def setPerceivedRoads(roads : RoadSegmentContainer) {
		this.roads = roads
	}

	def getPerceivedObjects : List<CullingResult1d<RoadObject>> {
		this.objects ?: emptyList
	}

	def setPerceivedObjects(objects : List<CullingResult1d<RoadObject>>) {
		this.objects = objects
	}
	
	def getInfluence : Influence {
		this.influence
	}

	def setInfluence(influence : Influence) {
		this.influence = influence
	}

}
