/* 
 * $Id$
 * This file is a part of the Arakhne Foundation Classes, http://www.arakhne.org/afc
 * 
 * Copyright (c) 2000-2012 Stephane GALLAND.
 * Copyright (c) 2005-10, Multiagent Team, Laboratoire Systemes et Transports,
 * Universite de Technologie de Belfort-Montbeliard.
 * Copyright (c) 2013-2019 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.arakhne.afc.simulation.framework.framework1d.config

import java.io.File
import java.util.List
import org.arakhne.afc.simulation.framework.base.config.AbstractConfiguration
import org.arakhne.afc.vmutil.json.JsonBuffer

/**
 * Abstract implementation of a configuration that support 1D and 1.5D dimensions of the environment.
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
abstract class AbstractConfiguration1d extends AbstractConfiguration {

	var roadNetwork : File

	val layers = <LayerConfig>newArrayList

	val roadObjects = <ObjectGroupConfig>newArrayList

	def getRoadNetwork : File {
		this.roadNetwork
	}

	def setRoadNetwork(file : File) {
		this.roadNetwork = file
	}

	def getLayers : List<LayerConfig> {
		this.layers
	}

	def getRoadObjectGroups : List<ObjectGroupConfig> {
		this.roadObjects
	}

	def toJson(buffer : JsonBuffer) : void {
		super.toJson(buffer)
		buffer.add("roadNetwork", roadNetwork)
		buffer.add("layers", getLayers)
		buffer.add("roadObjectGroups", roadObjectGroups)
	}

}
