/* 
 * $Id$
 * This file is a part of the Arakhne Foundation Classes, http://www.arakhne.org/afc
 * 
 * Copyright (c) 2000-2012 Stephane GALLAND.
 * Copyright (c) 2005-10, Multiagent Team, Laboratoire Systemes et Transports,
 * Universite de Technologie de Belfort-Montbeliard.
 * Copyright (c) 2013-2019 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.arakhne.afc.simulation.framework.framework1d.fx.probes

import com.opencsv.CSVWriter
import com.opencsv.ICSVWriter
import java.io.File
import java.io.PrintWriter
import org.arakhne.afc.simulation.framework.base.config.ProbeConfig
import org.arakhne.afc.simulation.framework.base.time.TimeManager
import org.arakhne.afc.simulation.framework.framework1d.environment.EnvironmentModel1d

/**
 * Abstract probe with JAvaFX support within the environment that outputs a CSV data.
 * 
 * @param <E> the type of the environment.
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
abstract class AbstractCsvFxEnvironmentProbe1d<E extends EnvironmentModel1d> extends AbstractFxEnvironmentProbe1d<E> {

	var output : CSVWriter

	new (config : ProbeConfig, outputFolder : File) {
		//
	}

	override close {
		if (this.output !== null) {
			this.output.flush
			this.output.close
			this.output = null
		}
	}

	/** Replies the header of the CSV file. */
	abstract def getCsvHeader : String[]

	final override run(environment : EnvironmentModel1d, time : TimeManager, rootFolder : File) {
		if (this.output === null) {
			var outputFile = new File(rootFolder, this.class.simpleName + ".csv")
			this.output = new CSVWriter(new PrintWriter(outputFile), '\t',
				ICSVWriter::DEFAULT_QUOTE_CHARACTER, ICSVWriter::DEFAULT_ESCAPE_CHARACTER, ICSVWriter::DEFAULT_LINE_END)
			this.output.writeNext(getCsvHeader)
		}
		probe(environment, time, rootFolder, this.output)
	}

	/** Run the probe. */
	abstract def probe(environment : EnvironmentModel1d, time : TimeManager, rootFolder : File, output : CSVWriter)

}
