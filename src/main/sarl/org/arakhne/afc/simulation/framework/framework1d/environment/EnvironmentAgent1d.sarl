/* 
 * $Id$
 * This file is a part of the Arakhne Foundation Classes, http://www.arakhne.org/afc
 * 
 * Copyright (c) 2000-2012 Stephane GALLAND.
 * Copyright (c) 2005-10, Multiagent Team, Laboratoire Systemes et Transports,
 * Universite de Technologie de Belfort-Montbeliard.
 * Copyright (c) 2013-2019 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.arakhne.afc.simulation.framework.framework1d.environment

import org.arakhne.afc.simulation.framework.base.config.AbstractConfiguration
import org.arakhne.afc.simulation.framework.base.environment.AbstractEnvironmentAgent
import org.arakhne.afc.simulation.framework.base.environment.AgentBody
import org.arakhne.afc.simulation.framework.base.events.Perception
import org.arakhne.afc.simulation.framework.base.time.TimeManager
import org.arakhne.afc.simulation.framework.framework1d.events.RoadPerception

/**
 * The agent that supports the agent environment.
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
agent EnvironmentAgent1d extends AbstractEnvironmentAgent {

	val perceptionFactory = new PerceptionFactory1d

	def getPerceptionFactory : PerceptionFactory<T> with T extends AgentBody {
		this.perceptionFactory as PerceptionFactory<T>
	}

	/** 
	 * Factory of perception.
	 * 
	 * @author $Author: sgalland$
	 * @version $FullVersion$
	 * @mavengroupid $GroupId$
	 * @mavenartifactid $ArtifactId$
	 */
	static class PerceptionFactory1d<T extends MobileAgentBody> implements PerceptionFactory<T> {

		def newPerception(time : TimeManager, configuration : AbstractConfiguration, body : T) : Perception {
			new RoadPerception(
				time.current,
				configuration.timeConfig.step,
				time.OSTimeFactor,
				body)
		}

	}
	
}
