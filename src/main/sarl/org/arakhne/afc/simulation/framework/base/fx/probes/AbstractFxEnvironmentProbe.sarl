/* 
 * $Id$
 * This file is a part of the Arakhne Foundation Classes, http://www.arakhne.org/afc
 * 
 * Copyright (c) 2000-2012 Stephane GALLAND.
 * Copyright (c) 2005-10, Multiagent Team, Laboratoire Systemes et Transports,
 * Universite de Technologie de Belfort-Montbeliard.
 * Copyright (c) 2013-2019 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.arakhne.afc.simulation.framework.base.fx.probes

import java.io.File
import javafx.scene.chart.XYChart.Data
import javafx.scene.chart.XYChart.Series
import org.arakhne.afc.simulation.framework.base.environment.AbstractEnvironmentModel
import org.arakhne.afc.simulation.framework.base.probes.EnvironmentProbe
import org.arakhne.afc.simulation.framework.base.time.TimeManager
import javafx.application.Platform

/**
 * Abstract environment probe with JavaFX support.
 * 
 * @param <E> the type of the environment.
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
abstract class AbstractFxEnvironmentProbe<E extends AbstractEnvironmentModel<?>> extends AbstractFxProbe implements EnvironmentProbe<E> {

	var series : Series<Double, Double>

	/** Ensure that the associated series are generated.
	 */
	protected def ensureSeries : Series<Double, Double> {
		if (this.series === null) {
			this.series = new Series
			this.series.name = this.name
		}
		return this.series
	}

	/** Update the series with the given data. */
	protected def updateWith(series : Series<Double, Double>, data : Data<Double, Double>) {
		Platform::runLater [
			series.data += data
		]
	}

	def run(time : TimeManager, rootFolder : File) {
		run(null, time, rootFolder)
	}

}
