/* 
 * $Id$
 * This file is a part of the Arakhne Foundation Classes, http://www.arakhne.org/afc
 * 
 * Copyright (c) 2000-2012 Stephane GALLAND.
 * Copyright (c) 2005-10, Multiagent Team, Laboratoire Systemes et Transports,
 * Universite de Technologie de Belfort-Montbeliard.
 * Copyright (c) 2013-2019 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.arakhne.afc.simulation.framework.base.probes

import java.io.File
import org.arakhne.afc.simulation.framework.base.environment.AbstractEnvironmentModel
import org.arakhne.afc.simulation.framework.base.time.TimeManager

/**
 * A probe within the environment.
 *
 * @param <E> the type of the environment.
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
interface EnvironmentProbe<E extends AbstractEnvironmentModel<?>> extends Probe {

	/** Collect data.
	 * 
	 * @param environment the environment instance.
	 * @param time the manager of time
	 * @param rootFolder the folder that contains all the probe outputs.
	 */
	def run(environment : E, time : TimeManager, rootFolder : File)

	/** Collect data.
	 * 
	 * @param environment the environment instance.
	 * @param time the manager of time
	 * @param rootFolder the folder that contains all the probe outputs.
	 */
	def runGeneric(environment : AbstractEnvironmentModel<?>, time : TimeManager, rootFolder : File) {
		run(environment as E, time, rootFolder)
	}

}
