/* 
 * $Id$
 * 
 * Copyright (c) 2019 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package fr.ciadlab.fogsimu.environment

import java.util.UUID
import org.arakhne.afc.gis.road.primitive.RoadType
import org.arakhne.afc.math.geometry.d1.d.Point1d
import org.arakhne.afc.math.geometry.d2.d.Point2d
import org.arakhne.afc.simulation.framework.framework1d.environment.AbstractMapPointSideRoadObject

import static extension org.arakhne.afc.simulation.framework.framework1d.environment.RoadSpeedLimit.*

/**
 * A electronic panel at the side of the road that is able to provide a speed limit information 
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
class SpeedLimitPanel extends AbstractMapPointSideRoadObject {

	var speedLimit : int

	new (id : UUID, position1d : Point1d, position2d : Point2d, content : String = null) {
		super(id, position1d, 1, 1, position2d.x, position2d.y)
		this.speedLimit = content.parseSpeedLimit.adjustSpeedLimit
	}

	protected static def parseSpeedLimit(content : String) : int {
		return Integer.parseInt(content)
	}

	def getSpeedLimit : int {
		if (this.speedLimit === 0) {
			var segment = this.roadSegment
			var typeAttr = segment.getAttribute("TYP_DONNEE")
			var type = typeAttr?.string?.toLowerCase
			switch (type) {
				case "urbain": {
					this.speedLimit = RoadType::LOCAL_ROAD.getDefaultSpeedLimitFor
				}
			}
			if (this.speedLimit === 0) {
				this.speedLimit = segment.roadType.getDefaultSpeedLimitFor
			}
		}
		return this.speedLimit
	}

	def setSpeedLimit(content : String) {
		this.speedLimit = content.parseSpeedLimit.adjustSpeedLimit
	}

	def setSpeedLimit(limit : int) {
		this.speedLimit = limit.adjustSpeedLimit
	}

}
