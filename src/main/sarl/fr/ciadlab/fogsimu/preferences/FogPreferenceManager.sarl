/* 
 * $Id$
 * This file is a part of the Arakhne Foundation Classes, http://www.arakhne.org/afc
 * 
 * Copyright (c) 2000-2012 Stephane GALLAND.
 * Copyright (c) 2005-10, Multiagent Team, Laboratoire Systemes et Transports,
 * Universite de Technologie de Belfort-Montbeliard.
 * Copyright (c) 2013-2019 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package fr.ciadlab.fogsimu.preferences

import org.arakhne.afc.simulation.framework.base.preferences.PreferenceManager
import org.arakhne.afc.simulation.framework.framework1d.preferences.PreferenceManager1d

/**
 * Manager of preferences for the fog simulator 1D.
 *
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
interface FogPreferenceManager extends PreferenceManager1d {

	/** Replies the singleton. */
	static def getSingleton : FogPreferenceManager {
		PreferenceManager::singleton as FogPreferenceManager
	}



	val FOG_DEFAULT_RADIUS = "fogDefaultRadius"

	val FOG_DEFAULT_RADIUS_VALUE = 500.0

	/** Replies the default radius of a fog zone. 
	 */
	@Pure
	def getFogDefaultRadius : double

	/** Change the default radius of a fog zone. 
	 */
	def setFogDefaultRadius(distance : double)



	
	val FOG_DEFAULT_VISIBILITY_DISTANCE = "fogDefaultVisibilityDistance"

	val FOG_DEFAULT_VISIBILITY_DISTANCE_VALUE = 50.0

	/** Replies the default distance of the visibility within a fog zone. 
	 */
	@Pure
	def getFogDefaultVisibilityDistance : double

	/** Change the default distance of the visibility within a fog zone. 
	 */
	def setFogVisibilityDistance(distance : double)




	val FOG_MAX_VISIBILITY_DISTANCE = "fogMaxVisibilityDistance"

	val FOG_MAX_VISIBILITY_DISTANCE_VALUE = 300.0

	/** Replies the maximum distance of the visibility within a fog zone for drawing purpose. 
	 */
	@Pure
	def getFogMaximumVisibilityDistance : double

	/** Change the maximum distance of the visibility within a fog zone for drawing purpose. 
	 */
	def setFogMaximumVisibilityDistance(distance : double)




	val FOG_COLOR = "fogColor"

	val FOG_COLOR_VALUE = 0xFFFFFF

	/** Replies the color of the fog. 
	 */
	@Pure
	def getFogColor : int

	/** Change the color of the fog. 
	 */
	def setFogColor(color : int)




	val FOG_COLOR_ON_ROADS = "fogColorOnRoads"

	val FOG_COLOR_ON_ROADS_VALUE = 0xFAFAD2

	/** Replies the color of the fog on the roads. 
	 */
	@Pure
	def getFogColorOnRoads : int

	/** Change the color of the fog on the roads.
	 */
	def setFogColorOnRoads(color : int)





	val FOG_OPACITY_FACTOR = "fogOpacityFactor"

	val FOG_OPACITY_FACTOR_VALUE = 0.7

	/** Replies the opacity factor for drawing he fog. 
	 */
	@Pure
	def getFogOpacityFactor : double

	/** Change the opacity factor for drawing he fog. 
	 */
	def setFogOpacityFactor(color : double)



	val PANEL_SIZE = "panelSize"

	val PANEL_SIZE_VALUE = 10.0

	/** Replies the size of a road panel on the map. 
	 */
	@Pure
	def getPanelSize : double

	/** Change the size of a road panel on the map. 
	 */
	def setPanelSize(size : double)

}
