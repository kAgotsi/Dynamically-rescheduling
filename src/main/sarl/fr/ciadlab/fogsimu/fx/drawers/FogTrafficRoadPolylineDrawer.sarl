/* 
 * $Id$
 * This file is a part of the Arakhne Foundation Classes, http://www.arakhne.org/afc
 * 
 * Copyright (c) 2019 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package fr.ciadlab.fogsimu.fx.drawers

import fr.ciadlab.fogsimu.environment.FogEnvironmentModel
import fr.ciadlab.fogsimu.preferences.FogPreferenceManager
import javafx.scene.paint.Color
import org.arakhne.afc.gis.road.RoadPolyline
import org.arakhne.afc.nodefx.ZoomableGraphicsContext
import org.arakhne.afc.simulation.framework.framework1d.fx.drawers.TrafficRoadPolylineDrawer

/** Drawer of the roads and the traffic with fog color on roads.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
class FogTrafficRoadPolylineDrawer extends TrafficRoadPolylineDrawer {

	def getFogColor(gc : ZoomableGraphicsContext) {
		gc.rgba(FogPreferenceManager::singleton.fogColor)
	}

	protected override setupRoadInterior(gc : ZoomableGraphicsContext, element : RoadPolyline) {
		var color : Color
		if (element.isSelected) {
			color = Color::RED //gc.rgb(SELECTED_ROAD_COLOR);
		} else if (element.getUserData(FogEnvironmentModel.FOG_ZONE_REFERENCE_ATTRIBUTE_NAME) !== null) {
			color = gc.getFogColor
		} else {
			color = gc.rgb(ROAD_COLOR)
		}
		gc.setStroke(color);
		if (element.isWidePolyline()) {
			gc.setLineWidthInMeters(element.getWidth());
		} else {
			gc.setLineWidthInPixels(1);
		}
	}

}
