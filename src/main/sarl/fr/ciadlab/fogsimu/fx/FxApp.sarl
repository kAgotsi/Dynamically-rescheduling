/* 
 * $Id$
 * 
 * Copyright (c) 2019 The original authors, and other authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package fr.ciadlab.fogsimu.fx

import io.sarl.javafx.FxApplication
import java.util.ResourceBundle
import javafx.fxml.FXMLLoader
import javafx.fxml.JavaFXBuilderFactory
import javafx.scene.Parent
import javafx.scene.Scene
import javafx.scene.image.Image
import javafx.stage.Stage
import org.arakhne.afc.vmutil.Resources

/** JavaFX application.
 * 
 * @author $Author: sgalland$
 * @version $FullVersion$
 * @mavengroupid $GroupId$
 * @mavenartifactid $ArtifactId$
 */
class FxApp extends FxApplication {

	def doApplicationStart(stage : Stage) : FXMLLoader {
		var simpleName = typeof(FxApp).simpleName
		val bundle = ResourceBundle::getBundle(
			typeof(FxApp).package.name.replaceAll("\\.", "/") + "/"
			+ simpleName)

		var location = this.class.getResource(simpleName + ".fxml")
		var loader = new FXMLLoader
		loader.location = location
		loader.builderFactory = new JavaFXBuilderFactory
		loader.resources = bundle
		var root : Parent = loader.load(location.openStream)
		var scene = new Scene(root)
		scene.stylesheets.add(class.getResource("application.css").toExternalForm)

		var applicationIcon16 = new Image(Resources::getResourceAsStream(typeof(FxApp), "/fogsimu-icon-16.jpg"))
		var applicationIcon32 = new Image(Resources::getResourceAsStream(typeof(FxApp), "/fogsimu-icon-32.jpg"))
		var applicationIcon64 = new Image(Resources::getResourceAsStream(typeof(FxApp), "/fogsimu-icon-64.jpg"))
		stage.getIcons().add(applicationIcon16)
		stage.getIcons().add(applicationIcon32)
		stage.getIcons().add(applicationIcon64)
		
		stage.title = bundle.getString("NO_TITLE")
		stage.scene = scene
		stage.centerOnScreen

		return loader
	}

}
